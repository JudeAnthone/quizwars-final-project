import java.util.*;

public class QuizGame {
    public static void main(String[] args) {
        Scanner userInput = new Scanner(System.in);
        boolean playAgain = true;

        // Display welcome banner using simple ASCII art
        System.out.println("=======================================");
        System.out.println("           WELCOME TO QUIZ WARS       ");
        System.out.println("         Test Your Knowledge!         ");
        System.out.println("=======================================");
        
        while (playAgain) {
            int score = 0;
            int totalQuestions = 0;

            // Create a simple but clear difficulty selection menu
            System.out.println("\n------ Select Difficulty Level ------");
            System.out.println("| 1. Easy                          |");
            System.out.println("| 2. Medium                        |");
            System.out.println("| 3. Hard                          |");
            System.out.println("----------------------------------");

            // Get difficulty selection with improved input handling
            String difficulty;
            while (true) {
                System.out.print("Enter your choice (1-3): ");
                String choice = userInput.nextLine().trim();
                switch (choice) {
                    case "1": difficulty = "easy"; break;
                    case "2": difficulty = "medium"; break;
                    case "3": difficulty = "hard"; break;
                    default:
                        System.out.println("! Invalid choice. Please select 1, 2, or 3.");
                        continue;
                }
                break;
            }

            // Load and validate questions
            List<Question> questions = QuestionLoader.loadQuestion(difficulty);
            if (questions == null || questions.isEmpty()) {
                System.out.println("\n! No questions available for the selected difficulty. Please try again.");
                continue;
            }

            // Game start countdown
            System.out.println("\nPrepare yourself!");
            for (int i = 3; i > 0; i--) {
                System.out.println(i + "...");
                sleep(500);
            }
            System.out.println("GO!\n");
            sleep(500);

            totalQuestions = questions.size();

            // Question display and handling
            for (int i = 0; i < questions.size(); i++) {
                Question q = questions.get(i);
                
                // Simple progress indicator
                System.out.println("\nQuestion " + (i + 1) + " of " + totalQuestions);
                System.out.println("Progress: [" + getProgressBar(i + 1, totalQuestions) + "]");
                
                // Question display with simple formatting
                System.out.println("\n=======================================");
                System.out.println(q.getQuestionText());
                System.out.println("---------------------------------------");
                System.out.println("A) " + q.getOptionA());
                System.out.println("B) " + q.getOptionB());
                System.out.println("C) " + q.getOptionC());
                System.out.println("D) " + q.getOptionD());
                System.out.println("=======================================");

                // Get and validate user answer
                String answer;
                while (true) {
                    System.out.print("Your Answer (A/B/C/D): ");
                    answer = userInput.nextLine().trim().toUpperCase();
                    if (answer.matches("[ABCD]")) break;
                    System.out.println("! Invalid input. Please enter A, B, C, or D.");
                }

                // Show result with clear indicators
                if (answer.equals(q.getCorrectAnswer())) {
                    System.out.println("\n>> CORRECT! <<");
                    score++;
                } else {
                    System.out.println("\n>> Incorrect. The correct answer was: " + q.getCorrectAnswer());
                }

                // Display current score with visual separator
                System.out.println("---------------------------------------");
                System.out.println("Current Score: " + score + " out of " + (i + 1));
                System.out.println("---------------------------------------");
                
                // Add a small delay between questions
                sleep(1000);
            }

            // Final score display with percentage and ASCII art frame
            double percentage = (score * 100.0) / totalQuestions;
            System.out.println("\n=======================================");
            System.out.println("            FINAL RESULTS             ");
            System.out.println("=======================================");
            System.out.printf("Final Score: %d/%d\n", score, totalQuestions);
            System.out.printf("Percentage: %.1f%%\n", percentage);
            System.out.println("---------------------------------------");
            
            // Display performance message based on score
            if (percentage >= 90) {
                System.out.println("Outstanding performance! You're a quiz master!");
            } else if (percentage >= 70) {
                System.out.println("Great job! You know your stuff!");
            } else if (percentage >= 50) {
                System.out.println("Good effort! Keep practicing!");
            } else {
                System.out.println("Keep learning! You'll do better next time!");
            }
            System.out.println("=======================================");

            // Play again prompt
            System.out.print("\nWould you like to play again? (Y/N): ");
            String userResponse = userInput.nextLine().trim().toLowerCase();
            playAgain = userResponse.startsWith("y");

            if (!playAgain) {
                System.out.println("\n=======================================");
                System.out.println("          Thanks for playing!         ");
                System.out.println("            See you soon!            ");
                System.out.println("=======================================");
            }
        }
        
        userInput.close();
    }

    // Helper method to create a simple text-based progress bar
    private static String getProgressBar(int current, int total) {
        int barLength = 20;
        int progress = (int) ((double) current / total * barLength);
        StringBuilder bar = new StringBuilder();
        for (int i = 0; i < barLength; i++) {
            if (i < progress) {
                bar.append("=");
            } else {
                bar.append("-");
            }
        }
        return bar.toString();
    }

    // Helper method for adding delays
    private static void sleep(long milliseconds) {
        try {
            Thread.sleep(milliseconds);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }
}





_______________________________________________________________________________________________



 import java.util.*;

public class QuizGame {

    public static void main(String[] args) {
      
         
        // Create a Scanner for user input
        Scanner userInput = new Scanner(System.in);
        boolean playAgain = true;

        // Display a welcome message with a stylized title
        System.out.println(
                " __        __   _                            _           ___        _    __        __             _ \r\n" +
                " \\ \\      / /__| | ___ ___  _ __ ___   ___  | |_ ___    / _ \\ _   _(_)___\\ \\      / /_ _ _ __ ___| |\r\n" +
                "  \\ \\ /\\ / / _ \\ |/ __/ _ \\| '_ ` _ \\ / _ \\ | __/ _ \\  | | | | | | | |_  /\\ \\ /\\ / / _` | '__/ __| |\r\n" +
                "   \\ V  V /  __/ | (_| (_) | | | | | |  __/ | || (_) | | |_| | |_| | |/ /  \\ V  V / (_| | |  \\__ \\_|\r\n" +
                "    \\_/\\_/ \\___|_|\\___\\___/|_| |_| |_|\\___|  \\__\\___/   \\__\\_\\\\__,_|_/___|  \\_/\\_/ \\__,_|_|  |___(_)\r\n"
        );

        while (playAgain) {
            int score = 0;

            // Prompt the user to select a difficulty
            System.out.println("\nTest your knowledge with multiple-choice questions. \n");

            System.out.println("Please select a difficulty: Easy, Medium, or Hard:");
            String difficulty = userInput.nextLine().trim().toLowerCase();

            // Load questions based on difficulty
            List<Question> questions = QuestionLoader.loadQuestion(difficulty);

            // Ensure there are questions to play with
            if (questions != null && !questions.isEmpty()) {
                System.out.println("\nStarting the Game!!!!!\n");

                int questionNumber = 1;

                // Loop through and display each question
                for (Question q : questions) {

                    // Display the question and its options
                    System.out.println("========================================");
                    System.out.println("                Question " + questionNumber);
                    System.out.println("========================================");
                    System.out.println(q.getQuestionText());
                    System.out.println("A: " + q.getOptionA());
                    System.out.println("B: " + q.getOptionB());
                    System.out.println("C: " + q.getOptionC());
                    System.out.println("D: " + q.getOptionD());
                    System.out.println("========================================");

                    // validation of the user input
                    String answer;
                    while (true) {
                        System.out.print("Your Answer (A - B - C - D): ");
                        answer = userInput.nextLine().trim().toUpperCase();
                        if (answer.matches("[ABCD]"))
                            break;
                        System.out.println("ERROR: INVALID INPUT. Please enter A, B, C, D. ");
                    }

                    // validation
                    if (answer.equals(q.getCorrectAnswer())) {
                        System.out.println("CORRECT!!\n");
                        score++;
                        System.err.println("Your Score " + score);
                    } else {
                        System.out.println("TRY AGAIN! The correct answer is: " + q.getCorrectAnswer() + "\n");
                    }
                    questionNumber++;
                }

                //FINAL SCORE
                System.out.println("Game Over! Thanks for playing!\n");
                System.out.println("Total Score is: " + score + "\n");
            } else {
                // If no questions are available for the selected difficulty
                System.out.println("\nNo questions available for the selected difficulty. Please try again.");
            }

            System.out.println("\nWould you like to Play Again? (YES OR NO): ");
            String userResponse = userInput.nextLine().trim().toLowerCase();
            

            if (!userResponse.equalsIgnoreCase("yes") && !userResponse.equalsIgnoreCase("y")) {
                playAgain = false;
                System.out.println("\nTHANK YOU FOR PLAYING!!!!\n");
            }

        }
        
        userInput.close();
    }
}
